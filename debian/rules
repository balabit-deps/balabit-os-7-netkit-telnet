#!/usr/bin/make -f
# $Id: rules,v 1.12 2003/10/18 03:37:54 herbert Exp $
# Sample debian/rules that uses debhelper. GNU copyright 1997 by Joey Hess.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

LDDEFS := -Wl,-z,defs -Wl,--as-needed

CFLAGS += $(shell dpkg-buildflags --get CFLAGS) -fPIE -pie
CXXFLAGS += $(shell dpkg-buildflags --get CXXFLAGS) -fPIE -pie
CPPFLAGS += $(shell dpkg-buildflags --get CPPFLAGS)
LDFLAGS += $(shell dpkg-buildflags --get LDFLAGS) -Wl,-z,now

DEB_HOST_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
ifeq ($(origin CC),default)
	CC = $(DEB_HOST_GNU_TYPE)-gcc
endif
export CC
ifeq ($(origin CXX),default)
	CXX = $(DEB_HOST_GNU_TYPE)-g++
endif
export CXX

build: build-arch build-indep
build-arch: build-stamp
build-indep: build-stamp
build-stamp:
	dh_testdir

	if [ ! -f MCONFIG ]; then \
		./configure; \
		sed -e 's;^CFLAGS=\(.*\)$$;CFLAGS= -Ddebian -D_GNU_SOURCE -DACCEPT_USERVAR -g $(CFLAGS) $(CPPFLAGS) \1;' \
		    -e 's;^CXXFLAGS=\(.*\)$$;CXXFLAGS= -Ddebian -D_GNU_SOURCE -DACCEPT_USERVAR -g $(CXXFLAGS) $(CPPFLAGS) \1;' \
		    -e 's;^LDFLAGS=\(.*\)$$;& $(LDDEFS) $(LDFLAGS);' \
		    MCONFIG > MCONFIG.new; \
		mv MCONFIG.new MCONFIG; \
	fi
	$(MAKE)

	touch build-stamp

clean:
	dh_testdir
	dh_testroot

	test ! -f MCONFIG || $(MAKE) distclean

	dh_clean

install: install-stamp
install-stamp: build-stamp
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs

	$(MAKE) -C telnet INSTALLROOT=`pwd`/debian/telnet MANDIR=/usr/share/man \
		install
	mv debian/telnet/usr/bin/telnet debian/telnet/usr/bin/telnet.netkit
	mv debian/telnet/usr/share/man/man1/telnet.1 \
	   debian/telnet/usr/share/man/man1/telnet.netkit.1
	cp telnet/README debian/telnet/usr/share/doc/telnet/README.telnet
	cp telnet/README.old debian/telnet/usr/share/doc/telnet/README.telnet.old
	$(MAKE) -C telnetd INSTALLROOT=`pwd`/debian/telnetd \
		MANDIR=/usr/share/man install
	cp telnetlogin/telnetlogin.8 debian/telnetd/usr/share/man/man8
	cp telnetlogin/telnetlogin debian/telnetd/usr/lib
	touch install-stamp

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
#	dh_testversion
	dh_testdir
	dh_testroot
	dh_installdocs
	dh_installexamples
	dh_installmenu
#	dh_installemacsen
#	dh_installinit
	dh_installcron
#	dh_installmanpages
#	dh_undocumented
	dh_installchangelogs ChangeLog
	dh_lintian
	dh_strip
	dh_compress
	dh_fixperms
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
#	dh_makeshlibs
	dh_md5sums
	dh_builddeb

source diff:                                                                  
	@echo >&2 'source and diff are obsolete - use dpkg-source -b'; false

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary
